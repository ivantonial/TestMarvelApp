name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  SCHEME: 'MarvelApp'
  PROJECT_PATH: 'MarvelApp.xcodeproj'
  SECRETS_PATH: 'MarvelApp/Config'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-15

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Select Latest Xcode
      run: |
        LATEST_XCODE=$(ls /Applications/ | grep "Xcode_" | sort -V | tail -1)
        if [ -z "$LATEST_XCODE" ]; then
          LATEST_XCODE="Xcode.app"
        fi
        echo "ðŸ“± Using: $LATEST_XCODE"
        sudo xcode-select -s /Applications/$LATEST_XCODE/Contents/Developer
        xcodebuild -version

    - name: List Available Simulators
      run: xcrun simctl list devices available

    - name: Setup Secrets
      run: |
        cp ${{ env.SECRETS_PATH }}/Secrets-model.xcconfig ${{ env.SECRETS_PATH }}/Secrets.xcconfig
        sed -i '' 's/YOUR_PUBLIC_KEY_HERE/${{ secrets.MARVEL_PUBLIC_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig
        sed -i '' 's/YOUR_PRIVATE_KEY_HERE/${{ secrets.MARVEL_PRIVATE_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig

    - name: Cache SPM Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

    - name: Build and Test
      run: |
        # Usa nome do dispositivo ao invÃ©s de ID
        xcodebuild test \
          -project ${{ env.PROJECT_PATH }} \
          -scheme ${{ env.SCHEME }} \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO