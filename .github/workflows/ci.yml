name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  SCHEME: 'MarvelApp'
  PROJECT_PATH: 'MarvelApp.xcodeproj'
  SECRETS_PATH: 'MarvelApp/Config'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-15

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Select Latest Xcode
      run: |
        LATEST_XCODE=$(ls /Applications/ | grep "Xcode_" | sort -V | tail -1)
        if [ -z "$LATEST_XCODE" ]; then
          LATEST_XCODE="Xcode.app"
        fi
        sudo xcode-select -s /Applications/$LATEST_XCODE/Contents/Developer
        xcodebuild -version
        
        echo "üì± Available SDKs:"
        xcodebuild -showsdks

    - name: Setup Secrets
      run: |
        cp ${{ env.SECRETS_PATH }}/Secrets-model.xcconfig ${{ env.SECRETS_PATH }}/Secrets.xcconfig
        sed -i '' 's/YOUR_PUBLIC_KEY_HERE/${{ secrets.MARVEL_PUBLIC_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig
        sed -i '' 's/YOUR_PRIVATE_KEY_HERE/${{ secrets.MARVEL_PRIVATE_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig

    - name: Cache SPM Dependencies
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

    - name: Build and Test
      run: |
        echo "üîç Finding compatible simulator and SDK..."
        
        # Lista SDKs dispon√≠veis e pega o mais recente do iOS Simulator
        AVAILABLE_SDK=$(xcodebuild -showsdks | grep "iphonesimulator" | tail -1 | awk '{print $NF}')
        
        echo "‚úÖ Using SDK: $AVAILABLE_SDK"
        
        # Procura por iPhone no iOS 18.x
        for IOS_VER in "18.6" "18.5" "18.4"; do
          DEVICE_LINE=$(xcrun simctl list devices "iOS $IOS_VER" 2>/dev/null | grep "iPhone" | head -1)
          
          if [ -n "$DEVICE_LINE" ]; then
            DEVICE_ID=$(echo "$DEVICE_LINE" | grep -oE "\([A-F0-9-]{36}\)" | tr -d "()")
            DEVICE_NAME=$(echo "$DEVICE_LINE" | sed -E 's/^[[:space:]]*([^(]+).*/\1/' | xargs)
            
            echo "‚úÖ Found: $DEVICE_NAME (iOS $IOS_VER)"
            echo "   UUID: $DEVICE_ID"
            
            xcrun simctl boot "$DEVICE_ID" 2>/dev/null || true
            sleep 5
            
            echo "üèóÔ∏è Building and testing..."
            xcodebuild test \
              -project ${{ env.PROJECT_PATH }} \
              -scheme ${{ env.SCHEME }} \
              -sdk "$AVAILABLE_SDK" \
              -destination "platform=iOS Simulator,id=$DEVICE_ID" \
              -enableCodeCoverage YES \
              CODE_SIGN_IDENTITY="" \
              CODE_SIGNING_REQUIRED=NO \
              IPHONEOS_DEPLOYMENT_TARGET=16.0
            
            exit 0
          fi
        done
        
        echo "‚ùå No compatible iPhone simulator found!"
        exit 1