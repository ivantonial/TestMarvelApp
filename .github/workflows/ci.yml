name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

env:
  SCHEME: 'MarvelApp'
  PROJECT_PATH: 'MarvelApp.xcodeproj'
  SECRETS_PATH: 'MarvelApp/Config'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-14
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Select Xcode
        run: |
          # Usar a vers√£o dispon√≠vel do Xcode
          sudo xcode-select -s /Applications/Xcode.app
          xcodebuild -version
      
      - name: Setup Secrets
        run: |
          # Configurar secrets conforme seu m√©todo original
          if [ -f "${{ env.SECRETS_PATH }}/Secrets-model.xcconfig" ]; then
            cp ${{ env.SECRETS_PATH }}/Secrets-model.xcconfig ${{ env.SECRETS_PATH }}/Secrets.xcconfig
            sed -i '' 's/YOUR_PUBLIC_KEY_HERE/${{ secrets.MARVEL_PUBLIC_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig
            sed -i '' 's/YOUR_PRIVATE_KEY_HERE/${{ secrets.MARVEL_PRIVATE_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig
            echo "‚úÖ Secrets configuradas"
          else
            echo "‚ö†Ô∏è Secrets-model.xcconfig n√£o encontrado"
          fi
      
      - name: Cache SPM Dependencies
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Build and Test
        run: |
          echo "üèóÔ∏è Building and testing..."
          
          set -o pipefail
          
          xcodebuild test \
            -project ${{ env.PROJECT_PATH }} \
            -scheme ${{ env.SCHEME }} \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            -enableCodeCoverage YES \
            -derivedDataPath ./DerivedData \
            -resultBundlePath ./TestResults.xcresult \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | tee xcodebuild.log \
            | xcpretty || true
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4  # ‚úÖ v4 ao inv√©s de v3
        with:
          name: test-results
          path: ./TestResults.xcresult
          retention-days: 30
          if-no-files-found: ignore  # N√£o falhar se n√£o encontrar
      
      - name: Upload Build Log
        if: failure()
        uses: actions/upload-artifact@v4  # ‚úÖ v4 ao inv√©s de v3
        with:
          name: build-log
          path: xcodebuild.log
          retention-days: 7
          if-no-files-found: ignore
      
      - name: Success Message
        if: success()
        run: |
          echo "‚úÖ BUILD E TESTES PASSARAM COM SUCESSO!"
          echo "üìä Resultados dispon√≠veis nos artifacts"
          echo "üì± Testado no iPhone 15 Pro"
          echo "üéâ Pipeline conclu√≠do!"