name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  SCHEME: 'MarvelApp'
  PROJECT_PATH: 'MarvelApp.xcodeproj'
  SECRETS_PATH: 'MarvelApp/Config'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-15

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Select Latest Xcode
      run: |
        LATEST_XCODE=$(ls /Applications/ | grep "Xcode_" | sort -V | tail -1)
        if [ -z "$LATEST_XCODE" ]; then
          LATEST_XCODE="Xcode.app"
        fi
        sudo xcode-select -s /Applications/$LATEST_XCODE/Contents/Developer
        xcodebuild -version

    - name: List Available Runtimes
      run: |
        echo "üì± Available runtimes:"
        xcrun simctl list runtimes

    - name: Setup Secrets
      run: |
        cp ${{ env.SECRETS_PATH }}/Secrets-model.xcconfig ${{ env.SECRETS_PATH }}/Secrets.xcconfig
        sed -i '' 's/YOUR_PUBLIC_KEY_HERE/${{ secrets.MARVEL_PUBLIC_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig
        sed -i '' 's/YOUR_PRIVATE_KEY_HERE/${{ secrets.MARVEL_PRIVATE_KEY }}/' ${{ env.SECRETS_PATH }}/Secrets.xcconfig

    - name: Cache SPM Dependencies
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

    - name: Build and Test  
      run: |
        echo "üîç Using iOS 26.0 (available runtime)..."
        
        # Usa iOS 26.0 que est√° dispon√≠vel
        DEVICE_LINE=$(xcrun simctl list devices "iOS 26.0" | grep "iPhone" | head -1)
        
        if [ -z "$DEVICE_LINE" ]; then
          echo "‚ùå No iPhone found for iOS 26.0"
          exit 1
        fi
        
        DEVICE_ID=$(echo "$DEVICE_LINE" | grep -oE "\([A-F0-9-]{36}\)" | tr -d "()")
        DEVICE_NAME=$(echo "$DEVICE_LINE" | sed -E 's/^[[:space:]]*([^(]+).*/\1/' | xargs)
        
        echo "‚úÖ Using: $DEVICE_NAME (iOS 26.0)"
        echo "   UUID: $DEVICE_ID"
        
        echo "üöÄ Booting simulator..."
        xcrun simctl boot "$DEVICE_ID" || true
        sleep 5
        
        echo "üèóÔ∏è Building and testing..."
        xcodebuild test \
          -project ${{ env.PROJECT_PATH }} \
          -scheme ${{ env.SCHEME }} \
          -destination "platform=iOS Simulator,id=$DEVICE_ID" \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          IPHONEOS_DEPLOYMENT_TARGET=16.0